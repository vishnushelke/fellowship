package com.bridgelabz.data_structure;

public class LinkedList<T> {
	
	 Node head;
	 
	 public LinkedList insert(T data)
	 {
		 LinkedList list=new LinkedList();
		 Node newnode= new Node();
		 newnode.data=data;
		 
		 if(head==null)
		 {
			 head=newnode;
		 }
		 else
		 {
			 Node<T> n=head;
			 while(n.next!=null)
				 n=n.next;
			 n.next=newnode;
		 }
		 return list;
	 }
	 
	 public LinkedList insertAt(int position,T data)
	 {
		 LinkedList list=new LinkedList();
		 Node newnode=new Node();
		 newnode.data=data;
		 
		 if(position==0)
		 {
			 newnode.next=head;
			 head=newnode;
		 }
		 else
		 {
			 Node n=head;
			 for (int i = 0; i < position-1; i++) {
				n=n.next;
			}
			 newnode.next=n.next;
			 n.next=newnode;
			 
		 }
		 return list;
	 }
	 
	 public LinkedList deleteAt(int position)
	 {
		 LinkedList list=new LinkedList();
		 if(position==0)
		 {
			 head=head.next;
		 }
		 else
		 {
			 Node newnode=new Node();
			 Node n=head;
			 for (int i = 0; i < position-1; i++) {
				n=n.next;
			}
			 newnode=n.next;
			 n.next=newnode.next;
			 newnode=null;
		 }
		 return list;
	 }
	 
	 
	 public void show()
	 {
		 Node n=head;
		 while(n!=null)
		 {
			 System.out.print(n.data);
			 n=n.next;
		 }
	 }

	

}
