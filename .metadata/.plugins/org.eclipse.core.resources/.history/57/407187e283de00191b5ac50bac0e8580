package com.bridgelabz.oops;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import org.codehaus.jackson.JsonGenerationException;
import org.codehaus.jackson.map.JsonMappingException;
import org.codehaus.jackson.map.ObjectMapper;

import com.bridgelabz.model.Company;
import com.bridgelabz.model.CompanySharesModel;
import com.bridgelabz.model.CustomerInfo;
import com.bridgelabz.model.CustomerInfoModel;
import com.bridgelabz.utility.OopsUtility;
import com.bridgelabz.utility.Utility;

public class StockAccount {

	public static void main(String[] args) throws JsonGenerationException, JsonMappingException, IOException {
		ObjectMapper mapper = new ObjectMapper();

		// impoeting all models
		CompanySharesModel modelCompanyShares = new CompanySharesModel();
		CustomerInfoModel modelCustomers = new CustomerInfoModel();

		ArrayList<Company> companies = new ArrayList<Company>();
		ArrayList<CustomerInfo> customers = new ArrayList<CustomerInfo>();

		// adding 3 companiesa and 3 customers in arraylist
		modelCompanyShares=OopsUtility.startDataCompanies();
		modelCustomers=OopsUtility.startDataCUdtomers();
		companies=modelCompanyShares.getCompanyshares();
		customers=modelCustomers.getCustomers();
		CustomerInfo customer=new CustomerInfo();
		Company company= new Company();
	
		
		//	for buying shares of a company
		System.out.println("validate yourself");
		for (int i = 0; i < customers.size(); i++) {
			System.out.println((i+1)+". "+customers.get(i).getName());
		}
		int customerId=Utility.intScan();
		customer=customers.get(customerId-1);
		System.out.println("you have "+customer.getRupeesavailable()+" rupees");
		System.out.println("which company shares you want to buy?");
		for (int i = 0; i < companies.size(); i++) {
			System.out.println((i + 1) + ". " + companies.get(i).getSymbol());
		}
		int response = Utility.intScan();
		companies.get(response - 1);
		System.out.println("this company has "+company.getNumberofshares()+" shares and shareprice "+company.getShareprice());
		System.out.println("How many shares you wish to buy?");
		response = Utility.intScan();
		int sharesCompany = company.getNumberofshares();
		while (response > sharesCompany || company.getShareprice()*response>customer.getRupeesavailable()) {
			if(response > sharesCompany)
			{
				System.out.println("you can buy only " + sharesCompany + " shares,enter shares upto this value");
				response = Utility.intScan();
			}
			while(company.getShareprice()*response>customer.getRupeesavailable())
			{
				int moneyNeeded = company.getShareprice() * response;
				while (customer.getRupeesavailable() < moneyNeeded) {
					System.out.println("You dont have enough,enter valid number of shares");
					response = Utility.intScan();
					moneyNeeded = company.getShareprice() * response;
			}
			
			}
		}
		System.out.println("buying "+response+" shares to "+company.getCompanyname());
		company.setNumberofshares(company.getNumberofshares() - response);
		System.out.println("company remaining shares are "+company.getNumberofshares());
		customer.setAvailableshares(customer.getAvailableshares() + response);
		System.out.println("Your available shares are "+customer.getAvailableshares());
		company.setTotalprice(company.getTotalprice() + response * company.getShareprice());
		customer.setRupeesavailable(customer.getRupeesavailable() - response * company.getShareprice());
		System.out.println("Money in your account is "+customer.getRupeesavailable());
		
		 
		
		//for selling shares
		System.out.println("validate yourself");
		for (int i = 0; i < customers.size(); i++) {
			System.out.println((i+1)+". "+customers.get(i).getName());
		}
		customerId=Utility.intScan();
		customer=customers.get(customerId-1);
		System.out.println("you have "+customer.getAvailableshares()+" shares");
		System.out.println("select the companyshares you wish to sell");
		for (int i = 0; i < companies.size(); i++) {
			System.out.println((i+1)+". "+companies.get(i).getCompanyname());
		}
		int selectCompany=Utility.intScan();
		company=companies.get(selectCompany-1);
		System.out.println("this company sharePrice is "+company.getShareprice());
		System.out.println("how many shares you wish to sell?");
		int shareNumber=Utility.intScan();
		while(shareNumber>customer.getAvailableshares()) {
			System.out.println("you have only "+customer.getAvailableshares()+" in your account,enter valid number of shares to be sold");
			shareNumber=Utility.intScan();
		}
		System.out.println("Selling "+shareNumber+" shares to "+company.getCompanyname());
		company.setNumberofshares(company.getNumberofshares() + shareNumber);
		System.out.println("company remaining shares are "+company.getNumberofshares());
		customer.setAvailableshares(customer.getAvailableshares() - shareNumber);
		System.out.println("Your available shares are "+customer.getAvailableshares());
		company.setTotalprice(company.getTotalprice() - shareNumber * company.getShareprice());
		customer.setRupeesavailable(customer.getRupeesavailable() + shareNumber * company.getShareprice());
		System.out.println("Money in your account is "+customer.getRupeesavailable());
	}

}
